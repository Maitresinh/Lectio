version: '3.8'

services:
  # Lectio Next.js Application
  lectio-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://lectio:lectio_password@db:5432/lectio_db
      - NEXTAUTH_SECRET=your-super-secret-key-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - HYPOTHESIS_API_KEY=${HYPOTHESIS_API_KEY:-}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./public/books:/app/public/books
    restart: unless-stopped
    networks:
      - lectio-network

  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=lectio_db
      - POSTGRES_USER=lectio
      - POSTGRES_PASSWORD=lectio_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lectio -d lectio_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - lectio-network

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - lectio-network
    command: redis-server --appendonly yes

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - lectio-app
    restart: unless-stopped
    networks:
      - lectio-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  lectio-network:
    driver: bridge